package Bean;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.jms.Session;

import com.mysql.jdbc.Statement;
import com.sun.corba.se.spi.orbutil.fsm.Guard.Result;
import com.sun.corba.se.spi.orbutil.fsm.State;

import model.Admin;
	/**
	 * 用来处理管理账户的所有业务方法
	 * @author MyJ
	 * */
public class AdminBean {
	
	private Object nsername;

	/**
	 * 处理管理账户登录
	 * @param username 账户名
	 * @param password 密码
	 * @return true表示登陆成功，false表示登陆失败
	 * **/
	public boolean login(String username,String password){
		boolean result=false;
		try {
			Connection connection=DBHelper.getConnection();
			
			String sql="select count(1) from admin where username=? and password=?";							//定义一个字符串
			PreparedStatement pstmt=connection.prepareStatement(sql);	//这个对象可以用来将sql语句发送到数据库（准备发送）
			pstmt.setString(1, username);
			pstmt.setString(2, password);
			ResultSet rs=pstmt.executeQuery();					//pstmt.executeQuery()表示将sql语句真的发送到数据库，并返回查询结果
			if(rs.next()){
				int number=rs.getInt(1);
				if(number==1){
					result=true;
				}
			}
				DBHelper.closeConnt(connection, pstmt, rs);						//关闭数据库
			} catch (SQLException e) {
				e.printStackTrace();
			}
		
		return result;
	}
	/**
	 * 根据账户名获取相应的Admin对象(模拟从数据库读取)
	 * @param username
	 * @return null表示没有找到
	 * */
	public Admin getAdmin(String username){
		Admin admin=null;
		try {
			
			Connection con=DBHelper.getConnection();
			String sql="select * from admin where username=?";							//定义一个字符串
			PreparedStatement pstmt=con.prepareStatement(sql);	//这个对象可以用来将sql语句发送到数据库（准备发送）
			pstmt.setString(1, username);
			ResultSet rs=pstmt.executeQuery();					//pstmt.executeQuery()表示将sql语句真的发送到数据库，并返回查询结果
			if(rs.next()){
				admin=new Admin();
				admin.setUsername(rs.getString("username"));
				admin.setPassword(rs.getString("password"));
				admin.setScreenName(rs.getString("screenName"));
				admin.setUserId(rs.getInt("userId"));
				//admin.setCreateTime(new Date());
			}
			DBHelper.closeConnt(con, pstmt, rs);									//关闭数据库
			} catch (SQLException e) {
				e.printStackTrace();
			}
		
		return admin;
	}
	//获取表单
	public List<Admin> getAdmins(){
		List<Admin> admins=new ArrayList<Admin>();
		try{
			Connection con=DBHelper.getConnection();
			String sql="select * from admin";
			PreparedStatement pstmt=con.prepareStatement(sql);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next()){
				Admin admin=new Admin(); //创建一个admin对象，用于保存admin表中的一条记录
				admin.setUsername(rs.getString("username"));
				admin.setPassword(rs.getString("password"));
				admin.setScreenName(rs.getString("screenName"));
				admin.setUserId(rs.getInt("userId"));
				admin.setCreateTime(rs.getTimestamp("createTime"));
				admins.add(admin);
			}
			DBHelper.closeConnt(con, pstmt, rs);
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return admins;
	}
	//删除账户
	public boolean delete(Integer userId){
		boolean status=false;//默认删除失败
		try{
			Connection con=DBHelper.getConnection();
			String sql="delete from admin where userId=?";
			PreparedStatement pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, userId);
			int number=pstmt.executeUpdate();
			if(number>0){
				status=true;
			}
			DBHelper.closeConnt(con, pstmt, null);
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return status;
	}
	//添加账户
	public boolean addadmin(Admin admin){
		boolean status=false;//默认删除失败
		
		try{
			Connection con=DBHelper.getConnection();
			String sql="insert into admin value(null,?,?,?,now())";
			PreparedStatement pstmt=con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			pstmt.setString(1, admin.getUsername());
			pstmt.setString(2, "123456");
			pstmt.setString(3, admin.getScreenName());
			ResultSet rs=pstmt.getGeneratedKeys();
			int number=pstmt.executeUpdate();
			if(number>0){
				status=true;
			}
			DBHelper.closeConnt(con, pstmt, rs);
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return status;
	}
	
	public boolean addadminz(Admin adminz){
		boolean status=false;
		try {
			Connection con=DBHelper.getConnection();
			String sql="select * from admin where username=?";
			PreparedStatement pstmt=con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			pstmt.setString(1, adminz.getUsername());
			ResultSet rs=pstmt.executeQuery();
			if(rs.next()){
				int number=rs.getInt(1);
				if(number>0){
					status=true;
				}
				
			}
			DBHelper.closeConnt(con, pstmt, rs);
		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		}
		return status;
	}
	
	public Admin updateadmin(Integer userId){
		Admin admin=null;
try {
			
			Connection con=DBHelper.getConnection();
			String sql="select * from admin where userId=?";							//定义一个字符串
			PreparedStatement pstmt=con.prepareStatement(sql);	//这个对象可以用来将sql语句发送到数据库（准备发送）
			pstmt.setInt(1,userId);
			ResultSet rs=pstmt.executeQuery();					//pstmt.executeQuery()表示将sql语句真的发送到数据库，并返回查询结果
			if(rs.next()){
				admin=new Admin();
				admin.setUsername(rs.getString("username"));
				admin.setPassword(rs.getString("password"));
				admin.setScreenName(rs.getString("screenName"));
				admin.setUserId(rs.getInt("userId"));
				
			}
			DBHelper.closeConnt(con, pstmt, rs);									//关闭数据库
			} catch (SQLException e) {
				e.printStackTrace();
			}
		return admin;
	}
	public boolean doupdateadmin(Admin admin){
		boolean status=false;//默认删除失败
		
		try{
			Connection con=DBHelper.getConnection();
			String sql="update admin set usernane=?,screenName=? where userId=?";
			PreparedStatement pstmt=con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			pstmt.setString(1, admin.getUsername());
			pstmt.setString(2, admin.getScreenName());
			pstmt.setInt(3, admin.getUserId());
			
			int number=pstmt.executeUpdate();
			if(number==1){
				status=true;
			}
			DBHelper.closeConnt(con, pstmt, null);
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return status;
	}
}
